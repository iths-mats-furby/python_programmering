8. Write a program that asks the user for a number n and prints the sum of the numbers 1 to n. Use argparse.
9. Modify the previous program such that only multiples of three or five are considered in the sum, e.g. 3, 5, 6, 9, 10, 12, 15 for n=17
10. Write a program that asks the user for a number n and gives them the possibility to choose between computing the sum and computing the product of 1,â€¦,n. Use argparse.
11. Write a function that takes a list of strings an prints them, one per line, in a rectangular frame. For example the list ["Hello", "World", "in", "a", "frame"] gets printed as:
*********
* Hello *
* World *
* in    *
* a     *
* frame *
*********
Use f-strings to achieve this in efficient code.
12. Write a program, consisting of one main .py file and one help file. Let a user enter a string upon starting the program. Use help functions from your help file to convert the string to pig latin.
13. Do the first 9 exercises found on https://www.machinelearningplus.com/python/101-numpy-exercises-python/
14. Plot the values found in the file called norm_dist.txt data. When you have done that, plot a frequency histogram of the data. Use whichever plotting library you wish.
15. In the folder "sample_dataset" you will find a dataset of x-ray images divided into three classes. Use pathlib and shutil to split this dataset into the sets training, validation and test set.
The folder structure will be the following after splitting:
|---sample_dataset
|---|---train
|---|---|---covid
|---|---|---|---covid_image_1.jpg
|---|---|---|---covid_image_2.jpg
|---|---|---|--- etc.
|---|---|---pneumonia
|---|---|---normal
|---|---test
|---|---|---covid
|---|---|---pneumonia
|---|---|---normal
|---|---val
|---|---|---covid
|---|---|---pneumonia
|---|---|---normal
The training set should consist of 80% of the images, the test and validation set will consist of 10% of the images each. No images may be overlapping in the folders!


